import "strings"
import "types"

_modules = {
	"root": {
		"data":      {},
		"path":      [],
		"resources": {},
	},

	"module.ec2-instance": {
		"data": {},
		"path": [
			"ec2-instance",
		],
		"resources": {
			"aws_instance": {
				"this": {
					0: {
						"applied": {
							"ami": "ami-03fe4ab7cbc8fe59d",
							"arn": "arn:aws:ec2:us-west-2:753646501470:instance/i-0433a67fc31a1a2d8",
							"associate_public_ip_address": false,
							"availability_zone":           "us-west-2b",
							"cpu_core_count":              1,
							"cpu_threads_per_core":        1,
							"credit_specification": [
								{
									"cpu_credits": "standard",
								},
							],
							"disable_api_termination": false,
							"ebs_block_device":        [],
							"ebs_optimized":           false,
							"ephemeral_block_device":  [],
							"get_password_data":       false,
							"host_id":                 null,
							"iam_instance_profile":    "",
							"id": "i-0433a67fc31a1a2d8",
							"instance_initiated_shutdown_behavior": "",
							"instance_state":                       "running",
							"instance_type":                        "t2.small",
							"ipv6_address_count":                   0,
							"ipv6_addresses":                       [],
							"key_name":                             "Prakash Test",
							"monitoring":                           true,
							"network_interface":                    [],
							"network_interface_id":                 null,
							"password_data":                        "",
							"placement_group":                      "",
							"primary_network_interface_id":         "eni-0de05bd4be1150296",
							"private_dns":                          "ip-10-0-0-68.us-west-2.compute.internal",
							"private_ip":                           "10.0.0.68",
							"public_dns":                           "",
							"public_ip":                            "",
							"root_block_device": [
								{
									"delete_on_termination": true,
									"encrypted":             false,
									"iops":                  100,
									"kms_key_id":            "",
									"volume_id":             "vol-0680d47f92766b080",
									"volume_size":           10,
									"volume_type":           "gp2",
								},
							],
							"security_groups":   [],
							"source_dest_check": true,
							"subnet_id":         "subnet-0c1318a3024330f13",
							"tags": {
								"Environment": "dev",
								"Name":        "fidelity_demo",
								"Terraform":   "true",
							},
							"tenancy":          "default",
							"timeouts":         null,
							"user_data":        null,
							"user_data_base64": null,
							"volume_tags": {
								"Name": "fidelity_demo",
							},
							"vpc_security_group_ids": [
								"sg-059cc83aacdf0e04c",
							],
						},
						"destroy": false,
						"diff": {
							"ami": {
								"computed": false,
								"new":      "ami-03fe4ab7cbc8fe59d",
								"old":      "ami-03fe4ab7cbc8fe59d",
							},
							"arn": {
								"computed": false,
								"new":      "arn:aws:ec2:us-west-2:753646501470:instance/i-0433a67fc31a1a2d8",
								"old":      "arn:aws:ec2:us-west-2:753646501470:instance/i-0433a67fc31a1a2d8",
							},
							"associate_public_ip_address": {
								"computed": false,
								"new":      "false",
								"old":      "false",
							},
							"availability_zone": {
								"computed": false,
								"new":      "us-west-2b",
								"old":      "us-west-2b",
							},
							"cpu_core_count": {
								"computed": false,
								"new":      "1",
								"old":      "1",
							},
							"cpu_threads_per_core": {
								"computed": false,
								"new":      "1",
								"old":      "1",
							},
							"credit_specification.#": {
								"computed": false,
								"new":      "1",
								"old":      "1",
							},
							"credit_specification.0.%": {
								"computed": false,
								"new":      "1",
								"old":      "1",
							},
							"credit_specification.0.cpu_credits": {
								"computed": false,
								"new":      "standard",
								"old":      "standard",
							},
							"disable_api_termination": {
								"computed": false,
								"new":      "false",
								"old":      "false",
							},
							"ebs_block_device.#": {
								"computed": false,
								"new":      "0",
								"old":      "0",
							},
							"ebs_optimized": {
								"computed": false,
								"new":      "false",
								"old":      "false",
							},
							"ephemeral_block_device.#": {
								"computed": false,
								"new":      "0",
								"old":      "0",
							},
							"get_password_data": {
								"computed": false,
								"new":      "false",
								"old":      "false",
							},
							"host_id": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"iam_instance_profile": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"id": {
								"computed": false,
								"new":      "i-0433a67fc31a1a2d8",
								"old":      "i-0433a67fc31a1a2d8",
							},
							"instance_initiated_shutdown_behavior": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"instance_state": {
								"computed": false,
								"new":      "running",
								"old":      "running",
							},
							"instance_type": {
								"computed": false,
								"new":      "t2.small",
								"old":      "t2.micro",
							},
							"ipv6_address_count": {
								"computed": false,
								"new":      "0",
								"old":      "0",
							},
							"ipv6_addresses.#": {
								"computed": false,
								"new":      "0",
								"old":      "0",
							},
							"key_name": {
								"computed": false,
								"new":      "Prakash Test",
								"old":      "Prakash Test",
							},
							"monitoring": {
								"computed": false,
								"new":      "true",
								"old":      "true",
							},
							"network_interface.#": {
								"computed": false,
								"new":      "0",
								"old":      "0",
							},
							"network_interface_id": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"password_data": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"placement_group": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"primary_network_interface_id": {
								"computed": false,
								"new":      "eni-0de05bd4be1150296",
								"old":      "eni-0de05bd4be1150296",
							},
							"private_dns": {
								"computed": false,
								"new":      "ip-10-0-0-68.us-west-2.compute.internal",
								"old":      "ip-10-0-0-68.us-west-2.compute.internal",
							},
							"private_ip": {
								"computed": false,
								"new":      "10.0.0.68",
								"old":      "10.0.0.68",
							},
							"public_dns": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"public_ip": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"root_block_device.#": {
								"computed": false,
								"new":      "1",
								"old":      "1",
							},
							"root_block_device.0.%": {
								"computed": false,
								"new":      "7",
								"old":      "7",
							},
							"root_block_device.0.delete_on_termination": {
								"computed": false,
								"new":      "true",
								"old":      "true",
							},
							"root_block_device.0.encrypted": {
								"computed": false,
								"new":      "false",
								"old":      "false",
							},
							"root_block_device.0.iops": {
								"computed": false,
								"new":      "100",
								"old":      "100",
							},
							"root_block_device.0.kms_key_id": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"root_block_device.0.volume_id": {
								"computed": false,
								"new":      "vol-0680d47f92766b080",
								"old":      "vol-0680d47f92766b080",
							},
							"root_block_device.0.volume_size": {
								"computed": false,
								"new":      "10",
								"old":      "10",
							},
							"root_block_device.0.volume_type": {
								"computed": false,
								"new":      "gp2",
								"old":      "gp2",
							},
							"security_groups.#": {
								"computed": false,
								"new":      "0",
								"old":      "0",
							},
							"source_dest_check": {
								"computed": false,
								"new":      "true",
								"old":      "true",
							},
							"subnet_id": {
								"computed": false,
								"new":      "subnet-0c1318a3024330f13",
								"old":      "subnet-0c1318a3024330f13",
							},
							"tags.%": {
								"computed": false,
								"new":      "3",
								"old":      "3",
							},
							"tags.Environment": {
								"computed": false,
								"new":      "dev",
								"old":      "dev",
							},
							"tags.Name": {
								"computed": false,
								"new":      "fidelity_demo",
								"old":      "fidelity_demo",
							},
							"tags.Terraform": {
								"computed": false,
								"new":      "true",
								"old":      "true",
							},
							"tenancy": {
								"computed": false,
								"new":      "default",
								"old":      "default",
							},
							"timeouts": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"user_data": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"user_data_base64": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"volume_tags.%": {
								"computed": false,
								"new":      "1",
								"old":      "1",
							},
							"volume_tags.Name": {
								"computed": false,
								"new":      "fidelity_demo",
								"old":      "fidelity_demo",
							},
							"vpc_security_group_ids.#": {
								"computed": false,
								"new":      "1",
								"old":      "1",
							},
							"vpc_security_group_ids.0": {
								"computed": false,
								"new":      "sg-059cc83aacdf0e04c",
								"old":      "sg-059cc83aacdf0e04c",
							},
						},
						"requires_new": false,
					},
				},
			},
		},
	},
}

module_paths = [
	[],
	[
		"ec2-instance",
	],
]

terraform_version = "0.12.19"

variables = {
	"aws_region": "us-west-2",
	"default_tags": {
		"Name":  "fidelity_demo",
		"TTL":   "-1",
		"owner": "prakash@hashicorp.com",
	},
	"project_name": "fidelity_demo",
	"tenancy":      "default",
}

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
path = _modules.root.path
resources = _modules.root.resources
