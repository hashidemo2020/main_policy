import "strings"

providers = {
	"aws": {
		"alias": "",
		"config": {
			"region": {
				"references": [
					"var.aws_region",
				],
			},
		},
		"module_address":      "",
		"name":                "aws",
		"provider_config_key": "aws",
		"version_constraint":  "",
	},
}

resources = {
	"data.terraform_remote_state.ecc_view": {
		"address": "data.terraform_remote_state.ecc_view",
		"config": {
			"backend": {
				"constant_value": "remote",
			},
			"config": {
				"references": [
					"var.bu_name",
					"var.config_version",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "",
		"name":                "ecc_view",
		"provider_config_key": "terraform",
		"provisioners":        [],
		"type":                "terraform_remote_state",
	},
	"module.ec2-instance.aws_instance.this": {
		"address": "module.ec2-instance.aws_instance.this",
		"config": {
			"ami": {
				"references": [
					"var.ami",
				],
			},
			"associate_public_ip_address": {
				"references": [
					"var.associate_public_ip_address",
				],
			},
			"credit_specification": {
				"constant_value": null,
			},
			"disable_api_termination": {
				"references": [
					"var.disable_api_termination",
				],
			},
			"ebs_optimized": {
				"references": [
					"var.ebs_optimized",
				],
			},
			"get_password_data": {
				"references": [
					"var.get_password_data",
				],
			},
			"iam_instance_profile": {
				"references": [
					"var.iam_instance_profile",
				],
			},
			"instance_initiated_shutdown_behavior": {
				"references": [
					"var.instance_initiated_shutdown_behavior",
				],
			},
			"instance_type": {
				"references": [
					"var.instance_type",
				],
			},
			"ipv6_address_count": {
				"references": [
					"var.ipv6_address_count",
				],
			},
			"ipv6_addresses": {
				"references": [
					"var.ipv6_addresses",
				],
			},
			"key_name": {
				"references": [
					"var.key_name",
				],
			},
			"monitoring": {
				"references": [
					"var.monitoring",
				],
			},
			"placement_group": {
				"references": [
					"var.placement_group",
				],
			},
			"private_ip": {
				"references": [
					"var.private_ips",
					"var.private_ips",
					"count.index",
					"var.private_ip",
				],
			},
			"source_dest_check": {
				"references": [
					"var.network_interface",
					"var.source_dest_check",
				],
			},
			"subnet_id": {
				"references": [
					"var.network_interface",
					"var.subnet_id",
					"var.subnet_ids",
					"count.index",
				],
			},
			"tags": {
				"references": [
					"var.instance_count",
					"var.use_num_suffix",
					"var.name",
					"count.index",
					"var.name",
					"var.tags",
				],
			},
			"tenancy": {
				"references": [
					"var.tenancy",
				],
			},
			"user_data": {
				"references": [
					"var.user_data",
				],
			},
			"user_data_base64": {
				"references": [
					"var.user_data_base64",
				],
			},
			"volume_tags": {
				"references": [
					"var.instance_count",
					"var.use_num_suffix",
					"var.name",
					"count.index",
					"var.name",
					"var.volume_tags",
				],
			},
			"vpc_security_group_ids": {
				"references": [
					"var.vpc_security_group_ids",
				],
			},
		},
		"count": {
			"references": [
				"var.instance_count",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.ec2-instance",
		"name":                "this",
		"provider_config_key": "module.ec2-instance:aws",
		"provisioners":        [],
		"type":                "aws_instance",
	},
}

provisioners = {}

variables = {
	"aws_region": {
		"default":        null,
		"description":    "the region where thhis vault cluster will be installed",
		"module_address": "",
		"name":           "aws_region",
	},
	"bu_name": {
		"default":        null,
		"description":    "org where Remote Workspace for ECC View is defined",
		"module_address": "",
		"name":           "bu_name",
	},
	"config_version": {
		"default":        null,
		"description":    "Remote Workspace where ECC View is defined",
		"module_address": "",
		"name":           "config_version",
	},
	"default_tags": {
		"default":        null,
		"description":    "Tags to be applied to resources",
		"module_address": "",
		"name":           "default_tags",
	},
	"ec2_ami": {
		"default":        null,
		"description":    "ami for ec2",
		"module_address": "",
		"name":           "ec2_ami",
	},
	"instance_key_name": {
		"default":        null,
		"description":    "Key to be used for resource",
		"module_address": "",
		"name":           "instance_key_name",
	},
	"instance_type": {
		"default":        null,
		"description":    "the AWS instance type",
		"module_address": "",
		"name":           "instance_type",
	},
	"module.ec2-instance:ami": {
		"default":        null,
		"description":    "ID of AMI to use for the instance",
		"module_address": "module.ec2-instance",
		"name":           "ami",
	},
	"module.ec2-instance:associate_public_ip_address": {
		"default":        null,
		"description":    "If true, the EC2 instance will have associated public IP address",
		"module_address": "module.ec2-instance",
		"name":           "associate_public_ip_address",
	},
	"module.ec2-instance:cpu_credits": {
		"default":        "standard",
		"description":    "The credit option for CPU usage (unlimited or standard)",
		"module_address": "module.ec2-instance",
		"name":           "cpu_credits",
	},
	"module.ec2-instance:disable_api_termination": {
		"default":        false,
		"description":    "If true, enables EC2 Instance Termination Protection",
		"module_address": "module.ec2-instance",
		"name":           "disable_api_termination",
	},
	"module.ec2-instance:ebs_block_device": {
		"default":        [],
		"description":    "Additional EBS block devices to attach to the instance",
		"module_address": "module.ec2-instance",
		"name":           "ebs_block_device",
	},
	"module.ec2-instance:ebs_optimized": {
		"default":        false,
		"description":    "If true, the launched EC2 instance will be EBS-optimized",
		"module_address": "module.ec2-instance",
		"name":           "ebs_optimized",
	},
	"module.ec2-instance:ephemeral_block_device": {
		"default":        [],
		"description":    "Customize Ephemeral (also known as Instance Store) volumes on the instance",
		"module_address": "module.ec2-instance",
		"name":           "ephemeral_block_device",
	},
	"module.ec2-instance:get_password_data": {
		"default":        false,
		"description":    "If true, wait for password data to become available and retrieve it.",
		"module_address": "module.ec2-instance",
		"name":           "get_password_data",
	},
	"module.ec2-instance:iam_instance_profile": {
		"default":        "",
		"description":    "The IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile.",
		"module_address": "module.ec2-instance",
		"name":           "iam_instance_profile",
	},
	"module.ec2-instance:instance_count": {
		"default":        1,
		"description":    "Number of instances to launch",
		"module_address": "module.ec2-instance",
		"name":           "instance_count",
	},
	"module.ec2-instance:instance_initiated_shutdown_behavior": {
		"default":        "",
		"description":    "Shutdown behavior for the instance",
		"module_address": "module.ec2-instance",
		"name":           "instance_initiated_shutdown_behavior",
	},
	"module.ec2-instance:instance_type": {
		"default":        null,
		"description":    "The type of instance to start",
		"module_address": "module.ec2-instance",
		"name":           "instance_type",
	},
	"module.ec2-instance:ipv6_address_count": {
		"default":        null,
		"description":    "A number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.",
		"module_address": "module.ec2-instance",
		"name":           "ipv6_address_count",
	},
	"module.ec2-instance:ipv6_addresses": {
		"default":        null,
		"description":    "Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface",
		"module_address": "module.ec2-instance",
		"name":           "ipv6_addresses",
	},
	"module.ec2-instance:key_name": {
		"default":        "",
		"description":    "The key name to use for the instance",
		"module_address": "module.ec2-instance",
		"name":           "key_name",
	},
	"module.ec2-instance:monitoring": {
		"default":        false,
		"description":    "If true, the launched EC2 instance will have detailed monitoring enabled",
		"module_address": "module.ec2-instance",
		"name":           "monitoring",
	},
	"module.ec2-instance:name": {
		"default":        null,
		"description":    "Name to be used on all resources as prefix",
		"module_address": "module.ec2-instance",
		"name":           "name",
	},
	"module.ec2-instance:network_interface": {
		"default":        [],
		"description":    "Customize network interfaces to be attached at instance boot time",
		"module_address": "module.ec2-instance",
		"name":           "network_interface",
	},
	"module.ec2-instance:placement_group": {
		"default":        "",
		"description":    "The Placement Group to start the instance in",
		"module_address": "module.ec2-instance",
		"name":           "placement_group",
	},
	"module.ec2-instance:private_ip": {
		"default":        null,
		"description":    "Private IP address to associate with the instance in a VPC",
		"module_address": "module.ec2-instance",
		"name":           "private_ip",
	},
	"module.ec2-instance:private_ips": {
		"default":        [],
		"description":    "A list of private IP address to associate with the instance in a VPC. Should match the number of instances.",
		"module_address": "module.ec2-instance",
		"name":           "private_ips",
	},
	"module.ec2-instance:root_block_device": {
		"default":        [],
		"description":    "Customize details about the root block device of the instance. See Block Devices below for details",
		"module_address": "module.ec2-instance",
		"name":           "root_block_device",
	},
	"module.ec2-instance:source_dest_check": {
		"default":        true,
		"description":    "Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs.",
		"module_address": "module.ec2-instance",
		"name":           "source_dest_check",
	},
	"module.ec2-instance:subnet_id": {
		"default":        "",
		"description":    "The VPC Subnet ID to launch in",
		"module_address": "module.ec2-instance",
		"name":           "subnet_id",
	},
	"module.ec2-instance:subnet_ids": {
		"default":        [],
		"description":    "A list of VPC Subnet IDs to launch in",
		"module_address": "module.ec2-instance",
		"name":           "subnet_ids",
	},
	"module.ec2-instance:tags": {
		"default":        {},
		"description":    "A mapping of tags to assign to the resource",
		"module_address": "module.ec2-instance",
		"name":           "tags",
	},
	"module.ec2-instance:tenancy": {
		"default":        "default",
		"description":    "The tenancy of the instance (if the instance is running in a VPC). Available values: default, dedicated, host.",
		"module_address": "module.ec2-instance",
		"name":           "tenancy",
	},
	"module.ec2-instance:use_num_suffix": {
		"default":        false,
		"description":    "Always append numerical suffix to instance name, even if instance_count is 1",
		"module_address": "module.ec2-instance",
		"name":           "use_num_suffix",
	},
	"module.ec2-instance:user_data": {
		"default":        null,
		"description":    "The user data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see user_data_base64 instead.",
		"module_address": "module.ec2-instance",
		"name":           "user_data",
	},
	"module.ec2-instance:user_data_base64": {
		"default":        null,
		"description":    "Can be used instead of user_data to pass base64-encoded binary data directly. Use this instead of user_data whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption.",
		"module_address": "module.ec2-instance",
		"name":           "user_data_base64",
	},
	"module.ec2-instance:volume_tags": {
		"default":        {},
		"description":    "A mapping of tags to assign to the devices created by the instance at launch time",
		"module_address": "module.ec2-instance",
		"name":           "volume_tags",
	},
	"module.ec2-instance:vpc_security_group_ids": {
		"default":        null,
		"description":    "A list of security group IDs to associate with",
		"module_address": "module.ec2-instance",
		"name":           "vpc_security_group_ids",
	},
	"project_name": {
		"default":        null,
		"description":    "the name for this project or application",
		"module_address": "",
		"name":           "project_name",
	},
}

outputs = {
	"module.ec2-instance:arn": {
		"depends_on":     [],
		"description":    "List of ARNs of instances",
		"module_address": "module.ec2-instance",
		"name":           "arn",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this",
			],
		},
	},
	"module.ec2-instance:availability_zone": {
		"depends_on":     [],
		"description":    "List of availability zones of instances",
		"module_address": "module.ec2-instance",
		"name":           "availability_zone",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this",
			],
		},
	},
	"module.ec2-instance:credit_specification": {
		"depends_on":     [],
		"description":    "List of credit specification of instances",
		"module_address": "module.ec2-instance",
		"name":           "credit_specification",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this",
			],
		},
	},
	"module.ec2-instance:ebs_block_device_volume_ids": {
		"depends_on":     [],
		"description":    "List of volume IDs of EBS block devices of instances",
		"module_address": "module.ec2-instance",
		"name":           "ebs_block_device_volume_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this",
			],
		},
	},
	"module.ec2-instance:id": {
		"depends_on":     [],
		"description":    "List of IDs of instances",
		"module_address": "module.ec2-instance",
		"name":           "id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this",
			],
		},
	},
	"module.ec2-instance:instance_count": {
		"depends_on":     [],
		"description":    "Number of instances to launch specified as argument to this module",
		"module_address": "module.ec2-instance",
		"name":           "instance_count",
		"sensitive":      false,
		"value": {
			"references": [
				"var.instance_count",
			],
		},
	},
	"module.ec2-instance:instance_state": {
		"depends_on":     [],
		"description":    "List of instance states of instances",
		"module_address": "module.ec2-instance",
		"name":           "instance_state",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this",
			],
		},
	},
	"module.ec2-instance:ipv6_addresses": {
		"depends_on":     [],
		"description":    "List of assigned IPv6 addresses of instances",
		"module_address": "module.ec2-instance",
		"name":           "ipv6_addresses",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this",
			],
		},
	},
	"module.ec2-instance:key_name": {
		"depends_on":     [],
		"description":    "List of key names of instances",
		"module_address": "module.ec2-instance",
		"name":           "key_name",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this",
			],
		},
	},
	"module.ec2-instance:password_data": {
		"depends_on":     [],
		"description":    "List of Base-64 encoded encrypted password data for the instance",
		"module_address": "module.ec2-instance",
		"name":           "password_data",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this",
			],
		},
	},
	"module.ec2-instance:placement_group": {
		"depends_on":     [],
		"description":    "List of placement groups of instances",
		"module_address": "module.ec2-instance",
		"name":           "placement_group",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this",
			],
		},
	},
	"module.ec2-instance:primary_network_interface_id": {
		"depends_on":     [],
		"description":    "List of IDs of the primary network interface of instances",
		"module_address": "module.ec2-instance",
		"name":           "primary_network_interface_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this",
			],
		},
	},
	"module.ec2-instance:private_dns": {
		"depends_on":     [],
		"description":    "List of private DNS names assigned to the instances. Can only be used inside the Amazon EC2, and only available if you've enabled DNS hostnames for your VPC",
		"module_address": "module.ec2-instance",
		"name":           "private_dns",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this",
			],
		},
	},
	"module.ec2-instance:private_ip": {
		"depends_on":     [],
		"description":    "List of private IP addresses assigned to the instances",
		"module_address": "module.ec2-instance",
		"name":           "private_ip",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this",
			],
		},
	},
	"module.ec2-instance:public_dns": {
		"depends_on":     [],
		"description":    "List of public DNS names assigned to the instances. For EC2-VPC, this is only available if you've enabled DNS hostnames for your VPC",
		"module_address": "module.ec2-instance",
		"name":           "public_dns",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this",
			],
		},
	},
	"module.ec2-instance:public_ip": {
		"depends_on":     [],
		"description":    "List of public IP addresses assigned to the instances, if applicable",
		"module_address": "module.ec2-instance",
		"name":           "public_ip",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this",
			],
		},
	},
	"module.ec2-instance:root_block_device_volume_ids": {
		"depends_on":     [],
		"description":    "List of volume IDs of root block devices of instances",
		"module_address": "module.ec2-instance",
		"name":           "root_block_device_volume_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this",
			],
		},
	},
	"module.ec2-instance:security_groups": {
		"depends_on":     [],
		"description":    "List of associated security groups of instances",
		"module_address": "module.ec2-instance",
		"name":           "security_groups",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this",
			],
		},
	},
	"module.ec2-instance:subnet_id": {
		"depends_on":     [],
		"description":    "List of IDs of VPC subnets of instances",
		"module_address": "module.ec2-instance",
		"name":           "subnet_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this",
			],
		},
	},
	"module.ec2-instance:tags": {
		"depends_on":     [],
		"description":    "List of tags of instances",
		"module_address": "module.ec2-instance",
		"name":           "tags",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this",
			],
		},
	},
	"module.ec2-instance:volume_tags": {
		"depends_on":     [],
		"description":    "List of tags of volumes of instances",
		"module_address": "module.ec2-instance",
		"name":           "volume_tags",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this",
			],
		},
	},
	"module.ec2-instance:vpc_security_group_ids": {
		"depends_on":     [],
		"description":    "List of associated security groups of instances, if running in non-default VPC",
		"module_address": "module.ec2-instance",
		"name":           "vpc_security_group_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this",
			],
		},
	},
}

module_calls = {
	"ec2-instance": {
		"config": {
			"ami": {
				"references": [
					"var.ec2_ami",
				],
			},
			"instance_count": {
				"constant_value": 1,
			},
			"instance_type": {
				"references": [
					"var.instance_type",
				],
			},
			"key_name": {
				"references": [
					"var.instance_key_name",
				],
			},
			"monitoring": {
				"constant_value": true,
			},
			"name": {
				"references": [
					"var.project_name",
				],
			},
			"subnet_id": {
				"references": [
					"data.terraform_remote_state.ecc_view",
				],
			},
			"tags": {
				"references": [
					"var.default_tags",
				],
			},
		},
		"count":              {},
		"for_each":           {},
		"module_address":     "",
		"name":               "ec2-instance",
		"source":             "app.terraform.io/FMR_BU1/ec2-instance/aws",
		"version_constraint": "3.1.1",
	},
}

strip_index = func(addr) {
	s = strings.split(addr, ".")
	for s as i, v {
		s[i] = strings.split(v, "[")[0]
	}

	return strings.join(s, ".")
}
