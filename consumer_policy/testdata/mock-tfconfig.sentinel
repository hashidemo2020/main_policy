import "strings"
import "types"

_modules = {
	"root": {
		"data": {
			"terraform_remote_state": {
				"ecc_view": {
					"config": {
						"backend": "remote",
					},
					"provisioners": null,
					"references": {
						"backend": [],
						"config": [
							"var.bu_name",
							"var.config_version",
						],
					},
				},
			},
		},
		"modules": {
			"ec2-instance": {
				"config": {
					"instance_count": 1,
					"monitoring":     true,
				},
				"references": {
					"ami": [
						"var.ec2_ami",
					],
					"instance_count": [],
					"instance_type": [
						"var.instance_type",
					],
					"key_name": [
						"var.instance_key_name",
					],
					"monitoring": [],
					"name": [
						"var.project_name",
					],
					"subnet_id": [
						"data.terraform_remote_state.ecc_view",
					],
					"tags": [
						"var.default_tags",
					],
				},
				"source":  "app.terraform.io/FMR_BU1/ec2-instance/aws",
				"version": "3.1.1",
			},
		},
		"outputs": {},
		"providers": {
			"aws": {
				"alias": {
					"": {
						"config": {},
						"references": {
							"region": [
								"var.aws_region",
							],
						},
						"version": "",
					},
				},
				"config": {},
				"references": {
					"region": [
						"var.aws_region",
					],
				},
				"version": "",
			},
		},
		"resources": {},
		"variables": {
			"aws_region": {
				"default":     null,
				"description": "the region where thhis vault cluster will be installed",
			},
			"bu_name": {
				"default":     null,
				"description": "org where Remote Workspace for ECC View is defined",
			},
			"config_version": {
				"default":     null,
				"description": "Remote Workspace where ECC View is defined",
			},
			"default_tags": {
				"default":     null,
				"description": "Tags to be applied to resources",
			},
			"ec2_ami": {
				"default":     null,
				"description": "ami for ec2",
			},
			"instance_key_name": {
				"default":     null,
				"description": "Key to be used for resource",
			},
			"instance_type": {
				"default":     null,
				"description": "the AWS instance type",
			},
			"project_name": {
				"default":     null,
				"description": "the name for this project or application",
			},
		},
	},

	"module.ec2-instance": {
		"data":    {},
		"modules": {},
		"outputs": {
			"arn": {
				"depends_on":  [],
				"description": "List of ARNs of instances",
				"references": [
					"aws_instance.this",
				],
				"sensitive": false,
				"value":     undefined,
			},
			"availability_zone": {
				"depends_on":  [],
				"description": "List of availability zones of instances",
				"references": [
					"aws_instance.this",
				],
				"sensitive": false,
				"value":     undefined,
			},
			"credit_specification": {
				"depends_on":  [],
				"description": "List of credit specification of instances",
				"references": [
					"aws_instance.this",
				],
				"sensitive": false,
				"value":     undefined,
			},
			"ebs_block_device_volume_ids": {
				"depends_on":  [],
				"description": "List of volume IDs of EBS block devices of instances",
				"references": [
					"aws_instance.this",
				],
				"sensitive": false,
				"value":     undefined,
			},
			"id": {
				"depends_on":  [],
				"description": "List of IDs of instances",
				"references": [
					"aws_instance.this",
				],
				"sensitive": false,
				"value":     undefined,
			},
			"instance_count": {
				"depends_on":  [],
				"description": "Number of instances to launch specified as argument to this module",
				"references": [
					"var.instance_count",
				],
				"sensitive": false,
				"value":     undefined,
			},
			"instance_state": {
				"depends_on":  [],
				"description": "List of instance states of instances",
				"references": [
					"aws_instance.this",
				],
				"sensitive": false,
				"value":     undefined,
			},
			"ipv6_addresses": {
				"depends_on":  [],
				"description": "List of assigned IPv6 addresses of instances",
				"references": [
					"aws_instance.this",
				],
				"sensitive": false,
				"value":     undefined,
			},
			"key_name": {
				"depends_on":  [],
				"description": "List of key names of instances",
				"references": [
					"aws_instance.this",
				],
				"sensitive": false,
				"value":     undefined,
			},
			"password_data": {
				"depends_on":  [],
				"description": "List of Base-64 encoded encrypted password data for the instance",
				"references": [
					"aws_instance.this",
				],
				"sensitive": false,
				"value":     undefined,
			},
			"placement_group": {
				"depends_on":  [],
				"description": "List of placement groups of instances",
				"references": [
					"aws_instance.this",
				],
				"sensitive": false,
				"value":     undefined,
			},
			"primary_network_interface_id": {
				"depends_on":  [],
				"description": "List of IDs of the primary network interface of instances",
				"references": [
					"aws_instance.this",
				],
				"sensitive": false,
				"value":     undefined,
			},
			"private_dns": {
				"depends_on":  [],
				"description": "List of private DNS names assigned to the instances. Can only be used inside the Amazon EC2, and only available if you've enabled DNS hostnames for your VPC",
				"references": [
					"aws_instance.this",
				],
				"sensitive": false,
				"value":     undefined,
			},
			"private_ip": {
				"depends_on":  [],
				"description": "List of private IP addresses assigned to the instances",
				"references": [
					"aws_instance.this",
				],
				"sensitive": false,
				"value":     undefined,
			},
			"public_dns": {
				"depends_on":  [],
				"description": "List of public DNS names assigned to the instances. For EC2-VPC, this is only available if you've enabled DNS hostnames for your VPC",
				"references": [
					"aws_instance.this",
				],
				"sensitive": false,
				"value":     undefined,
			},
			"public_ip": {
				"depends_on":  [],
				"description": "List of public IP addresses assigned to the instances, if applicable",
				"references": [
					"aws_instance.this",
				],
				"sensitive": false,
				"value":     undefined,
			},
			"root_block_device_volume_ids": {
				"depends_on":  [],
				"description": "List of volume IDs of root block devices of instances",
				"references": [
					"aws_instance.this",
				],
				"sensitive": false,
				"value":     undefined,
			},
			"security_groups": {
				"depends_on":  [],
				"description": "List of associated security groups of instances",
				"references": [
					"aws_instance.this",
				],
				"sensitive": false,
				"value":     undefined,
			},
			"subnet_id": {
				"depends_on":  [],
				"description": "List of IDs of VPC subnets of instances",
				"references": [
					"aws_instance.this",
				],
				"sensitive": false,
				"value":     undefined,
			},
			"tags": {
				"depends_on":  [],
				"description": "List of tags of instances",
				"references": [
					"aws_instance.this",
				],
				"sensitive": false,
				"value":     undefined,
			},
			"volume_tags": {
				"depends_on":  [],
				"description": "List of tags of volumes of instances",
				"references": [
					"aws_instance.this",
				],
				"sensitive": false,
				"value":     undefined,
			},
			"vpc_security_group_ids": {
				"depends_on":  [],
				"description": "List of associated security groups of instances, if running in non-default VPC",
				"references": [
					"aws_instance.this",
				],
				"sensitive": false,
				"value":     undefined,
			},
		},
		"providers": {},
		"resources": {
			"aws_instance": {
				"this": {
					"config": {
						"credit_specification": [
							{},
						],
					},
					"provisioners": null,
					"references": {
						"ami": [
							"var.ami",
						],
						"associate_public_ip_address": [
							"var.associate_public_ip_address",
						],
						"credit_specification": [
							{
								"cpu_credits": [
									"local.is_t_instance_type",
									"var.cpu_credits",
								],
							},
						],
						"disable_api_termination": [
							"var.disable_api_termination",
						],
						"ebs_optimized": [
							"var.ebs_optimized",
						],
						"get_password_data": [
							"var.get_password_data",
						],
						"iam_instance_profile": [
							"var.iam_instance_profile",
						],
						"instance_initiated_shutdown_behavior": [
							"var.instance_initiated_shutdown_behavior",
						],
						"instance_type": [
							"var.instance_type",
						],
						"ipv6_address_count": [
							"var.ipv6_address_count",
						],
						"ipv6_addresses": [
							"var.ipv6_addresses",
						],
						"key_name": [
							"var.key_name",
						],
						"monitoring": [
							"var.monitoring",
						],
						"placement_group": [
							"var.placement_group",
						],
						"private_ip": [
							"var.private_ips",
							"var.private_ips",
							"count.index",
							"var.private_ip",
						],
						"source_dest_check": [
							"var.network_interface",
							"var.source_dest_check",
						],
						"subnet_id": [
							"var.network_interface",
							"var.subnet_id",
							"var.subnet_ids",
							"count.index",
						],
						"tags": [
							"var.instance_count",
							"var.use_num_suffix",
							"var.name",
							"count.index",
							"var.name",
							"var.tags",
						],
						"tenancy": [
							"var.tenancy",
						],
						"user_data": [
							"var.user_data",
						],
						"user_data_base64": [
							"var.user_data_base64",
						],
						"volume_tags": [
							"var.instance_count",
							"var.use_num_suffix",
							"var.name",
							"count.index",
							"var.name",
							"var.volume_tags",
						],
						"vpc_security_group_ids": [
							"var.vpc_security_group_ids",
						],
					},
				},
			},
		},
		"variables": {
			"ami": {
				"default":     null,
				"description": "ID of AMI to use for the instance",
			},
			"associate_public_ip_address": {
				"default":     null,
				"description": "If true, the EC2 instance will have associated public IP address",
			},
			"cpu_credits": {
				"default":     "standard",
				"description": "The credit option for CPU usage (unlimited or standard)",
			},
			"disable_api_termination": {
				"default":     false,
				"description": "If true, enables EC2 Instance Termination Protection",
			},
			"ebs_block_device": {
				"default":     [],
				"description": "Additional EBS block devices to attach to the instance",
			},
			"ebs_optimized": {
				"default":     false,
				"description": "If true, the launched EC2 instance will be EBS-optimized",
			},
			"ephemeral_block_device": {
				"default":     [],
				"description": "Customize Ephemeral (also known as Instance Store) volumes on the instance",
			},
			"get_password_data": {
				"default":     false,
				"description": "If true, wait for password data to become available and retrieve it.",
			},
			"iam_instance_profile": {
				"default":     "",
				"description": "The IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile.",
			},
			"instance_count": {
				"default":     1,
				"description": "Number of instances to launch",
			},
			"instance_initiated_shutdown_behavior": {
				"default":     "",
				"description": "Shutdown behavior for the instance",
			},
			"instance_type": {
				"default":     null,
				"description": "The type of instance to start",
			},
			"ipv6_address_count": {
				"default":     null,
				"description": "A number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.",
			},
			"ipv6_addresses": {
				"default":     null,
				"description": "Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface",
			},
			"key_name": {
				"default":     "",
				"description": "The key name to use for the instance",
			},
			"monitoring": {
				"default":     false,
				"description": "If true, the launched EC2 instance will have detailed monitoring enabled",
			},
			"name": {
				"default":     null,
				"description": "Name to be used on all resources as prefix",
			},
			"network_interface": {
				"default":     [],
				"description": "Customize network interfaces to be attached at instance boot time",
			},
			"placement_group": {
				"default":     "",
				"description": "The Placement Group to start the instance in",
			},
			"private_ip": {
				"default":     null,
				"description": "Private IP address to associate with the instance in a VPC",
			},
			"private_ips": {
				"default":     [],
				"description": "A list of private IP address to associate with the instance in a VPC. Should match the number of instances.",
			},
			"root_block_device": {
				"default":     [],
				"description": "Customize details about the root block device of the instance. See Block Devices below for details",
			},
			"source_dest_check": {
				"default":     true,
				"description": "Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs.",
			},
			"subnet_id": {
				"default":     "",
				"description": "The VPC Subnet ID to launch in",
			},
			"subnet_ids": {
				"default":     [],
				"description": "A list of VPC Subnet IDs to launch in",
			},
			"tags": {
				"default":     {},
				"description": "A mapping of tags to assign to the resource",
			},
			"tenancy": {
				"default":     "default",
				"description": "The tenancy of the instance (if the instance is running in a VPC). Available values: default, dedicated, host.",
			},
			"use_num_suffix": {
				"default":     false,
				"description": "Always append numerical suffix to instance name, even if instance_count is 1",
			},
			"user_data": {
				"default":     null,
				"description": "The user data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see user_data_base64 instead.",
			},
			"user_data_base64": {
				"default":     null,
				"description": "Can be used instead of user_data to pass base64-encoded binary data directly. Use this instead of user_data whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption.",
			},
			"volume_tags": {
				"default":     {},
				"description": "A mapping of tags to assign to the devices created by the instance at launch time",
			},
			"vpc_security_group_ids": {
				"default":     null,
				"description": "A list of security group IDs to associate with",
			},
		},
	},
}

module_paths = [
	[],
	[
		"ec2-instance",
	],
]

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
modules = _modules.root.modules
providers = _modules.root.providers
resources = _modules.root.resources
variables = _modules.root.variables
outputs = _modules.root.outputs
