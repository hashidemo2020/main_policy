import "time"
import "tfconfig"
import "decimal"

param version
param push_date
param grace_period_mins

grace_period_secs = grace_period_mins * 60

current_date    = time.now["rfc3339"]
current_version = tfconfig.modules["ec2-instance"].version
deadline        = time.load(push_date).add(time.minute * decimal.new(grace_period_mins).int)
duration_secs   = time.load(current_date).sub(push_date)/1000000000 * -1

version_match = func(){
  return current_version == version
}

within_graceperiod = func() {
  return grace_period_secs > duration_secs
}

check_compliance = func(){
  if version_match() {
    print("aws-ec2-instance module")
    print("-----------------------")
    print("Using compliant version:", current_version)
    return true
  } else {
    if within_graceperiod() {
      print("----------------------------------------------------------------")
      print("|")
      print("| WARNING: Your ECC Config View Version is out of compliance.")
      print("| WARNING: You are however within the Grace period. Start planning to move to the new version")
      print("| Required version:", version)
      print("| Version in use:", current_version)
      print("| Please upgrade by:", deadline.rfc3339)
      print("|")
      print("----------------------------------------------------------------")
      return true
    } else {
      print("----------------------------------------------------------------")
      print("|")
      print("| ERROR: Your ECC Config View Version  is out of compliance.")
      print("| Required version:", version)
      print("| Version in use:", current_version)
      print("| Please upgrade IMMEDIATELY!")
      print("|")
      print("----------------------------------------------------------------")
      return false
    }
  }
}

main = rule {
  check_compliance()
}
